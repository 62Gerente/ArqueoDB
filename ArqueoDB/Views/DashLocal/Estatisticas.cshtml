@model ArqueoDB.Models.Local
@using ArqueoDB.Models
@using System.Collections.Generic
@using ArqueoDB.DAL

@{
    ViewBag.Title = "Estatisticas";
    ViewBag.Organizacao = Model;
    Layout = "~/Views/Shared/_LayoutOrganizacao.cshtml";  
    
}   
@section breadcrumb {
    <li><a href="/Locais/Details/@Html.DisplayFor(model => model.LocalID)">@Html.DisplayFor(model => model.Nome)</a><span class="divider"><i class="icon-caret-right"></i></span></li>
    <li><a href="/DashLocal/Dashboard/@Html.DisplayFor(model => model.LocalID)">Gestão do Local</a><span class="divider"><i class="icon-caret-right"></i></span></li>
    <li><a href="/DashLocal/Estatisticas/@Html.DisplayFor(model => model.LocalID)">Estatísticas</a></li>
}
@section dashboard{
    Estatísticas
}
                <div class="row-fluid">
                    <div class="btn-rounded-panel large">
						<ul class="btn-rounded">
                            <li class="important"><span><a  class="bottom_tooltip" data-original-title="Artefactos"><i class="micon-diamond text-info" style="font-size:65px"></i></a></span><span class="badge badge-important">@Model.Artefactos.Count()</span></li>
							<li class="danger"><span><a  class="bottom_tooltip" data-original-title="Documentos"><i class="micon-libreoffice text-error" style="font-size:65px"></i></a></span><span class="badge badge-important">@Model.Documentos.Where(d => !d.Apagado).Count()</span></li>
							<li class="warning"><span><a  class="bottom_tooltip" data-original-title="Publicações"><i class="micon-newspaper text-warning" style="font-size:65px"></i></a></span><span class="badge badge-important">@Model.Publicacoes.Where(d => !d.Apagado).Count()</span></li>														
                            <li class="success"><span><a  class="bottom_tooltip" data-original-title="Plantas"><i class="micon-picture text-success" style="font-size:65px"></i></a></span><span class="badge badge-important">@Model.Plantas.Where(p => !p.Apagado).Count()</span></li>
                            <li class="important"><span><a  class="bottom_tooltip" data-original-title="Imagens"><i class="micon-camera text-info" style="font-size:65px"></i></a></span><span class="badge badge-important">@Model.Imagens.Where(p => !p.Apagada).Count()</span></li>
                            <li><span><a  class="bottom_tooltip" data-original-title="Seguidores"><i class="micon-feed" style="color:black;font-size:65px"></i></a></span><span class="badge badge-important">@Model.Seguidores.Count()</span></li>
						</ul>
					</div>
                </div>

      @* Registo de actividade *@
      <div class="row-fluid">
                    <div class="span12 ">
						<div class="well widget">
							<div class="widget-header">
								<h3 class="title">Publicação de conteúdo nos últimos 6 meses</h3>
							</div>
                            <div id="chart_div_actividade"></div>
					    </div>
                   </div>
          </div>
      


                <div class="row-fluid">
                    <div class="span6 ">
						<div class="well widget">
							<div class="widget-header">
								<h3 class="title">Comentários por Artefacto</h3>
							</div>
                            <div id="chart_div_comentarios"></div>
					    </div>
                   </div>
                    
                    <div class="span6">
						<div class="well widget">
							<div class="widget-header">
								<h3 class="title">Imagens por Artefacto</h3>
							</div>
                            <div id="chart_div_imagens"></div>
					    </div>
                   </div>                
                </div>
                @*
                <div class="row-fluid">
                    <div class="span6">
						<div class="well widget">
							<div class="widget-header">
								<h3 class="title">Documentos por Ano</h3>
							</div>
                            <div id="chart_div_doc"></div>
					    </div>
                    </div>
                    <div class="span6 pull-right">
						<div class="well widget">
							<div class="widget-header">
								<h3 class="title">Imagens por Local</h3>
							</div>
                            <div id="chart_div_img" height: 400px;"></div>
					    </div>
                   </div>
                </div>*@
    
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">

        @{
            Dictionary<int, int> documentosMes;
            Dictionary<int, int> publicacoesMes;
            Dictionary<int, int> comentariosMes;
            Dictionary<int, int> imagensMes;

            Util.registarActividadeLocal(Model, out documentosMes, out publicacoesMes, out imagensMes, out comentariosMes);            
        }
       
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
              ['Mês', 'Documentos', 'Publicações', 'Comentários', 'Imagens'],
          @{    
              
              for (int i = 5; i >= 0; i--)
              {
               <text>['</text>@Util.determinarLabel(i)<text>', </text>@Util.getValor(documentosMes, i)<text>, </text>@Util.getValor(publicacoesMes, i)<text>, </text>@Util.getValor(comentariosMes, i)<text>, </text>@Util.getValor(imagensMes, i)<text>],</text> 
              } 
           }
            ]);

            var options = {
                title: '',
                backgroundColor: '#f5f5f5',
                colors: ['red', 'orange', 'blue', 'grey'],
                chartArea: { width: "70%" /*, top: 0, width: "50%", height: "75%"*/ }
            };

            var chart = new google.visualization.LineChart(document.getElementById('chart_div_actividade'));
            chart.draw(data, options);
        }
    </script>


    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
              ['Artefacto', 'Número de Comentários'],
          @{
              foreach (Artefacto art in Model.Artefactos.Where(a => !a.Apagado))
              {
            <text>['</text>@art.Nome<text>', </text>@art.Comentarios.Where(c => !c.Apagado).Count()<text>],</text>
              }
           }
        ]);

        var options = {
            title: '',
            backgroundColor: '#f5f5f5',
            chartArea: { width: "160%", height: "140%" }
        };

        var chart = new google.visualization.PieChart(document.getElementById('chart_div_comentarios'));
        chart.draw(data, options);
    }
    </script>
    
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
              ['Artefacto', 'Número de Imagens'],
          @{
              foreach (Artefacto art in Model.Artefactos.Where(a => !a.Apagado))
              {
            <text>['</text>@art.Nome<text>', </text>@art.Imagens.Where(i => !i.Apagada).Count()<text>],</text>
              }
           }
            ]);

            var options = {
                title: '',
                backgroundColor: '#f5f5f5',
                chartArea: { width: "160%", height: "140%" }
            };

            var chart = new google.visualization.PieChart(document.getElementById('chart_div_imagens'));
            chart.draw(data, options);
        }
    </script>
    
    @*
    <script type="text/javascript">
        @{
        
            Dictionary<int, List<Documento>> documentosPorAnos = new Dictionary<int, List<Documento>>();
            foreach (Documento doc in Model.Documentos)
            {
                if (documentosPorAnos.ContainsKey(doc.DataPublicacao.Year) == true)
                {
                    List<Documento> valor;
                    documentosPorAnos.TryGetValue(doc.DataPublicacao.Year, out valor);
                    valor.Add(doc);
                }
                else
                {
                    List<Documento> novaLista = new List<Documento>();
                    novaLista.Add(doc);
                    documentosPorAnos.Add(doc.DataPublicacao.Year, novaLista);
                }
            }
    }
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
              ['Ano', 'Documentos'],
          @{
              foreach (int ano in documentosPorAnos.Keys.OrderBy(p => p))
              {
                  List<Documento> valor;
                  documentosPorAnos.TryGetValue(ano, out valor);
            <text>['</text>@ano<text>', </text>@valor.Count()<text>],</text>
              }
           }
            ]);

            var options = {
                title: '',
                backgroundColor: '#f5f5f5',
                //chartArea: { width: "160%", height: "140%" },
                hAxis: { title: 'Ano'/*, titleTextStyle: { color: 'black' }*/ },
                //colors: ['blue'],
                bar: { groupWidth: 20 },
                chartArea: { left: 80, top: 20, width: "65%", height: "75%" }
            };

            var chart = new google.visualization.ColumnChart(document.getElementById('chart_div_doc'));
            chart.draw(data, options);
        }
    </script>
    *@

@*
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
              ['Local', 'Número Publicações'],
          @{
           foreach(Local loc in Model.Locais.Where(l => !l.Apagado))
           {
            <text>['</text>@loc.Nome<text>', </text>@loc.Artefactos.Where(d => !d.Apagado).Count()<text>],</text>
           }
           }
            ]);

            var options = {
                title: '',
                backgroundColor: '#f5f5f5',
                chartArea: { width: "160%", height: "140%" }
            };

            var chart = new google.visualization.PieChart(document.getElementById('chart_div_art'));
            chart.draw(data, options);
        }
    </script>*@    